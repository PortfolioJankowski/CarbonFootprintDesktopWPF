<!-- SŁOWNIK ZASOBÓW, SPRAWDŹ APP.XAML!-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Styl opisujujący RadioButton o kluczu BtnStyle, będę mógł się odwołać do niego we 
    właściwości Style wewnątrz kodu konkretnego guzika-->
    <Style x:Key="BtnStyle"
           TargetType="RadioButton" >

        <Setter Property="HorizontalAlignment"  Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5,0,0" />
        
        <!-- właściwość template służy do definicji niestandardowego szablonu dla danej kontrolki
        jest bardziej zaawansowana niż zwykłe właściwości-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton" >
                    <!-- Border jako kontener, który ogranicza i definiuje obszar przycisku-->
                    <Border x:Name="border"
                            Height="50"
                            Width="228"
                            BorderThickness="0">

                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackround"
                                             Color="#272b2f" />
                        </Border.Background>

                        <Grid>
                            <Border x:Name="Indicator"
                                    Height="35"
                                    Width="4"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Background="#FFFFFF"
                                    Visibility="Collapsed"
                                    CornerRadius="2" />
                            <!-- Tu ciekawe! Content presenter renderuje treść samego przycisku, tutaj
                            zawartość kontroli jest renderowana zgodnie z niestandardowym szablonem-->
                            <ContentPresenter />
                        </Grid>
                    </Border>
                    
                    <!--Rozpoczyna się sekcja Triggerów-->
                    <ControlTemplate.Triggers>
                        <!--Gdy mysz jest nad kontrolką to zmieniam style Indicator na widoczny-->
                        <!--Trigger patrzy ma statuczne właściwości elementu i reaguje na ich zmiany-->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />
                        </Trigger>

                        <!--Inaczej niż trigger, bo on patrzy na zdarzenia (jakieś akcje użytkownika i na nie reaguje
                        Tutaj reagujemy na zdarzenie  MouseEnter wystąpi wewnątrz elementu border (kontener przycisku-->
                        <EventTrigger RoutedEvent="MouseEnter"
                                      SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackround"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#272B2F"
                                                    To="#3E434A"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Border.MouseLeave"
                                      SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackround"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#3E434A"
                                                    To="#272B2F"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsChecked"
                                 Value="True" >
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#212529" />
                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />
                        </Trigger>
                     
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>